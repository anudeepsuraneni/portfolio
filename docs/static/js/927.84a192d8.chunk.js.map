{"version":3,"file":"static/js/927.84a192d8.chunk.js","mappings":"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","sources":["assets/configs/projectConfig.js","pages/Projects.js","../node_modules/@mui/material/CardMedia/cardMediaClasses.js","../node_modules/@mui/material/CardMedia/CardMedia.js","components/Cards/CardIcons.js","components/Cards/CardItem.js"],"sourcesContent":["import {SiKaggle} from \"react-icons/si\";\nimport {MdSlideshow} from \"react-icons/md\";\nimport cyclisticLogo from \"../images/cyclistic-logo.png\"\n\nconst projectConfig = [\n    {\n        id: \"project-1\",\n        title: \"How does a bike-share navigate speedy success?\",\n        links: [\n            {\n                name: \"analysis\",\n                url: \"https://www.kaggle.com/code/anudeepsuraneni/how-does-a-bike-share-navigate-speedy-success\",\n                icon: <SiKaggle />\n            },\n            {\n                name: \"insights\",\n                url: \"https://docs.google.com/presentation/d/1Fe4hTNBd_gMWMHCTpdQ2ozi8gHiuvlYfJgCWwgiELLs/edit?usp=sharing\",\n                icon: <MdSlideshow />\n            }\n        ],\n        image: cyclisticLogo,\n        description: \"A comprehensive analysis of bike-share data to understand user behavior and improve business strategies.\",\n        target: \"_blank\"\n    }\n]\n\nexport default projectConfig","import { Grid2 } from '@mui/material';\nimport CardItem from '../components/Cards/CardItem';\nimport projectConfig from '../assets/configs/projectConfig';\n\nconst Projects = () => {\n    return (\n        <Grid2 container spacing={6} justifyContent=\"center\">\n            {projectConfig.map((item, index) => (\n                <Grid2 key={index}>\n                    <CardItem item={item} />\n                </Grid2>\n            ))}\n        </Grid2>\n    );\n}\n\nexport default Projects;\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardMediaUtilityClass(slot) {\n  return generateUtilityClass('MuiCardMedia', slot);\n}\nconst cardMediaClasses = generateUtilityClasses('MuiCardMedia', ['root', 'media', 'img']);\nexport default cardMediaClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getCardMediaUtilityClass } from \"./cardMediaClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    isMediaComponent,\n    isImageComponent\n  } = ownerState;\n  const slots = {\n    root: ['root', isMediaComponent && 'media', isImageComponent && 'img']\n  };\n  return composeClasses(slots, getCardMediaUtilityClass, classes);\n};\nconst CardMediaRoot = styled('div', {\n  name: 'MuiCardMedia',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      isMediaComponent,\n      isImageComponent\n    } = ownerState;\n    return [styles.root, isMediaComponent && styles.media, isImageComponent && styles.img];\n  }\n})({\n  display: 'block',\n  backgroundSize: 'cover',\n  backgroundRepeat: 'no-repeat',\n  backgroundPosition: 'center',\n  variants: [{\n    props: {\n      isMediaComponent: true\n    },\n    style: {\n      width: '100%'\n    }\n  }, {\n    props: {\n      isImageComponent: true\n    },\n    style: {\n      objectFit: 'cover'\n    }\n  }]\n});\nconst MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nconst IMAGE_COMPONENTS = ['picture', 'img'];\nconst CardMedia = /*#__PURE__*/React.forwardRef(function CardMedia(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardMedia'\n  });\n  const {\n    children,\n    className,\n    component = 'div',\n    image,\n    src,\n    style,\n    ...other\n  } = props;\n  const isMediaComponent = MEDIA_COMPONENTS.includes(component);\n  const composedStyle = !isMediaComponent && image ? {\n    backgroundImage: `url(\"${image}\")`,\n    ...style\n  } : style;\n  const ownerState = {\n    ...props,\n    component,\n    isMediaComponent,\n    isImageComponent: IMAGE_COMPONENTS.includes(component)\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardMediaRoot, {\n    className: clsx(classes.root, className),\n    as: component,\n    role: !isMediaComponent && image ? 'img' : undefined,\n    ref: ref,\n    style: composedStyle,\n    ownerState: ownerState,\n    src: isMediaComponent ? image || src : undefined,\n    ...other,\n    children: children\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? CardMedia.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node, props => {\n    if (!props.children && !props.image && !props.src && !props.component) {\n      return new Error('MUI: Either `children`, `image`, `src` or `component` prop must be specified.');\n    }\n    return null;\n  }),\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Image to be displayed as a background image.\n   * Either `image` or `src` prop must be specified.\n   * Note that caller must specify height otherwise the image will not be visible.\n   */\n  image: PropTypes.string,\n  /**\n   * An alias for `image` property.\n   * Available only with media components.\n   * Media components: `video`, `audio`, `picture`, `iframe`, `img`.\n   */\n  src: PropTypes.string,\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardMedia;","import { Box, IconButton } from '@mui/material';\n\nconst CardIcons = (props) => {\n    return (\n        <Box sx={{ display: 'flex', justifyContent: 'center', mt: 0.5 }}>\n            {props.item.links.map((link) => (\n                <IconButton\n                    key={props.item.id + link.name}\n                    title={link.name}\n                    href={link.url}\n                    target={props.item.target}\n                    rel=\"noopener noreferrer\"\n                    color=\"primary\"\n                    sx={{ color: '#263238', padding: 2 }}\n                >\n                    {link.icon}\n                </IconButton>\n            ))}\n        </Box>\n    );\n}\n\nexport default CardIcons;\n","import { Card, CardContent, CardMedia, Typography, Box } from '@mui/material';\nimport CardIcons from './CardIcons';\n\nconst CardItem = (props) => {\n    return (\n        <Card sx={{ width: 380, height: 450, m: 2, backgroundColor: '#F6F6F6', boxShadow: 3, display: 'flex', flexDirection: 'column', justifyContent: 'space-between' }}>\n            <CardMedia\n                component=\"div\"\n                role=\"img\"\n                aria-label={props.item.title}\n                sx={{\n                    backgroundImage: `url(${props.item.image || require('../../assets/images/cyclistic-logo.png')})`,\n                    height: 220, // Increased height for the media\n                    backgroundSize: 'contain',\n                    backgroundRepeat: 'no-repeat',\n                    backgroundPosition: 'center'\n                }}\n            />\n            <CardContent sx={{ flexGrow: 1, display: 'flex', flexDirection: 'column', justifyContent: 'space-between', p: 2 }}>\n                <Box sx={{ flexGrow: 1 }}>\n                    <Typography variant=\"h6\" component=\"div\" textAlign=\"center\">\n                        <strong>{props.item.title}</strong>\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" textAlign=\"center\" sx={{ mt: 1 }}>\n                        {props.item.description}\n                    </Typography>\n                </Box>\n                <Box sx={{ borderTop: 1, borderColor: 'divider', my: 1 }} />\n                <CardIcons item={props.item} sx={{ py: 0.3 }} />\n            </CardContent>\n        </Card>\n    );\n}\n\nexport default CardItem;\n"],"names":["id","title","links","name","url","icon","_jsx","SiKaggle","MdSlideshow","image","cyclisticLogo","description","target","Projects","Grid2","container","spacing","justifyContent","children","projectConfig","map","item","index","CardItem","getCardMediaUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardMediaRoot","styled","overridesResolver","props","styles","ownerState","isMediaComponent","isImageComponent","root","media","img","display","backgroundSize","backgroundRepeat","backgroundPosition","variants","style","width","objectFit","MEDIA_COMPONENTS","IMAGE_COMPONENTS","React","inProps","ref","useDefaultProps","className","component","src","other","_objectWithoutProperties","includes","composedStyle","_objectSpread","backgroundImage","concat","classes","slots","composeClasses","useUtilityClasses","clsx","as","role","undefined","Box","sx","mt","link","IconButton","href","rel","color","padding","_jsxs","Card","height","m","backgroundColor","boxShadow","flexDirection","CardMedia","require","CardContent","flexGrow","p","Typography","variant","textAlign","borderTop","borderColor","my","CardIcons","py"],"sourceRoot":""}